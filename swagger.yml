openapi: 3.0.1
info:
  title: API Gateway service API endpoints
  description: API Gateway from Message in a Bottle with Microservices
  version: "0.1"
servers:
- url: /

paths:
  /:
    get:
      tags: [ Home ]
      summary: Return the home page of the web app
      responses:
        200:
          description: Renders the index.html template

  /login:
    tags: [ Authentication ]
    get:
      summary: Shows the login page and its form
      responses:
        200:
          description: Renders the login.html template
    post:
      summary: Handles the login of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Reloads the login.html page with a warning, in case the user credentials were invalid
        302:
          description: Redirects to the correct profile page, depending on the type of the user

  /relogin:
    get:
      tags: [ Authentication ]
      summary: Utility route used to handle the user's session expiration
      responses:
        200:
          description: Calls the login method   

  /logout:
    get:
      tags: [ Authentication ]
      summary: Logs out the logged user
      responses:
        302:
          description: Redirects to the homepage

  /unregister_user:
    get:
      tags: [ User ]
      summary: This method retrieves the unregister page for an user
      responses:
        200:
          description: Return the unregister.html template

    post:
      tags: [ User ]
      summary: This method allows the unregistration of an user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              x-body-name: body
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  description: The inserted password for confirmation
      responses:
        202:
          description: User unregistered, redirects to the home
        401:
          description: Invalid credentials, reloads the page
        404:
          description: User not found, reloads the page

  /create_user/:
    get:
      tags: [ User ]
      summary: This method allows retrieves the sign up page for a new user
      parameters:
        - name: type_
          description: type of the user
          in: path
          required: true
          schema: 
            type: string
      responses:
        200:
          description: Renders the create_user template, filled with the fiels for the user's data
    post:
      summary: This method allows the creation of a new user
      tags: [ User ]
      parameters:
        - name: type_
          description: type of the user
          in: path
          required: true
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: the email field for the user
                password:
                  type: string
                  description: the password field for the user
                firstname: 
                  type: string
                  description: the firstname field for the user
                lastname: 
                  type: string
                  description: the lastname field for the user
                date_of_birth:
                  type: string
                  description: the birthday field for the user
                location:
                  type: string
                  description: the locatiom of the user
              required:
                - email
                - password
                - firstname
                - lastname
                - date_of_birth
                - location

  /users/:
    get:
      tags: [ User ]
      summary: This method retrieves the users list
      responses:
        200:
          description: Return users list
        default:
          description: An error occured while retrieving the list
    post:
      summary: This method allows the user to apply moderation actions, report and (un)block
      tags: [ Users ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  description: id of the user applying the action
                target_id
                  description: id of the user to which the action is applied
              required:
                - user_id
                - target_id
      responses:
        200:
          description: Action applied, realods the page
        202:
          description: Action applied, reloads the page
        default:
          description: Error while applying the action, reloads the page with an error message

  /reported_users/:
    get:
      tags: [ User ]
      summary: This method retrieves the reported users list, only for admins
      responses:
        200:
          description: Return reported users list
        default:
          description: An error occured while retrieving the list
    post:
      summary: This method allows the admin to apply moderation actions, reject and (un)ban
      tags: [ Users ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  description: id of the admin applying the action
                target_id
                  description: id of the user to which the action is applied
              required:
                - user_id
                - target_id
      responses:
        202:
          description: Action applied, reloads the page
        default:
          description: Error while applying the action, reloads the page with an error message

  /profile/:
    get:
      tags: [ User ]
      summary: Shows the profile page of the current and loads the UserProfileForm
      responses:
        200:
          description: Renders the profile.html template 
    post:
      summary: This method allows the update of profile information, profilce pic and language filter for the user
      tags: [ Users ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: the new email for the user
                firstname:
                  type: string
                  description: the new name for the user
                lastname:
                  type: string
                  description: the new lastname for the user
                location:
                  type: string
                  description: the new location for the user
                profile_pic:
                  type: string
                  description: binary of the new profile pic
              required:
                - email
                - firstname
                - lastname
                - location
                - profile_pic
      responses:
        200:
          description: Realods the page
        202:
          description: Reloads the page
        404:
          description: User not gound, reloads the page with an error message
        409:
          description: Requested email already exists, reloads the page with an error message
        default:
          description: Error while updating processing the update, reloads the page with an error message


  